name: Build Mikrotik RSC

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * *'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl gh

      - name: Download hosts
        run: |
          URL=https://raw.githubusercontent.com/AntiZapret/antizapret-hosts/main/hosts
          http_status=$(curl -sSL -w "%{http_code}" -o hosts "$URL")
          if [[ "$http_status" -ne 200 ]]; then
            echo "ERROR: failed to download hosts (HTTP $http_status)" >&2
            exit 1
          fi

      - name: Validate hosts file
        run: |
          if ! grep -Eq '^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+' hosts; then
            echo "ERROR: hosts file does not contain valid IPv4 entries" >&2
            exit 1
          fi

      - name: Generate RSC
        run: bash -xe scripts/generate-rsc.sh

      - name: Commit & Tag
        if: env.cnt != '0'
        run: |
          DATE=$(date +'%Y%m%d')
          TAG=v$DATE
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git tag "$TAG"
          git push origin "$TAG"

      - name: Create GitHub Release (no changes)
        if: env.cnt == '0'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG=v$(date +'%Y%m%d')
          gh release create "$TAG" \
            --title "DNS Static $TAG" \
            --notes "No new entries. RSC file unchanged."

      - name: Create GitHub Release with RSC
        if: env.cnt != '0'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG=v$(date +'%Y%m%d')
          DOMAINS=$(sed 's/^/â€¢ /' mikrotik/new-domains.txt)
          CHANGELOG="Automated MikroTik RSC build\nAdded $cnt entries\n\n$DOMAINS"
          gh release create "$TAG" mikrotik/dns-static.rsc \
            --title "DNS Static $TAG" \
            --notes "$CHANGELOG"
