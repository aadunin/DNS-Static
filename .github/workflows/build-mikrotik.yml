name: Build Mikrotik RSC

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: "0 0 * * *" # каждый день в 00:00 UTC
  workflow_dispatch:

concurrency:
  group: mikrotik-rsc
  cancel-in-progress: true

env:
  DNS_TTL: 1d # можно менять TTL без правки скрипта

jobs:
  build:
    name: Build Mikrotik RSC
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      checks: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Fetch latest hosts
        shell: bash
        run: |
          set -euo pipefail
          curl -fSLS --retry 3 --retry-delay 2 -m 30 \
            -o hosts \
            https://raw.githubusercontent.com/pumPCin/AntiZapret/main/hosts
          # Минимальная валидация: файл не пуст и похоже содержит строки формата hosts
          if ! test -s hosts; then
            echo "::error ::Empty hosts file from source"
            exit 1
          fi
          # Базовая проверка, чтобы не проглотить HTML-страницу ошибки
          if head -n 1 hosts | grep -qiE '</?html'; then
            echo "::error ::Source returned HTML instead of hosts"
            exit 1
          fi

      - name: Fetch previous hosts snapshot
        shell: bash
        run: |
          set -euo pipefail
          curl -fSLS -m 30 \
            -o old-hosts \
            "https://raw.githubusercontent.com/${{ github.repository }}/main/hosts" \
            || touch old-hosts

      - name: Compare hosts
        id: cmp
        shell: bash
        run: |
          if cmp -s hosts old-hosts; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
            echo "::notice ::No changes in AntiZapret hosts, skipping update"
          else
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Generate dns-static.rsc
        if: steps.cmp.outputs.changed == 'true'
        id: gen
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p mikrotik
          out="mikrotik/dns-static.rsc"
          echo '/ip dns static remove [find address-list="autohost"]' > "$out"

          tmp_pairs="$(mktemp)"
          # Собираем пары и нормализуем: фильтры, lower-case домены, TEST-NET-1 для 0.0.0.0
          grep -Ev '^(#|$)' hosts | while read -r ip rest; do
            for d in $rest; do
              # Пропускаем служебные локальные записи
              if [[ "$ip" == "127.0.0.1" && ( "$d" == "local" || "$d" == "localhost" || "$d" == "localhost.localdomain" ) ]]; then
                continue
              fi
              if [[ "$ip" == "255.255.255.255" && "$d" == "broadcasthost" ]]; then
                continue
              fi
              # Приведение домена к нижнему регистру
              d_lc="$(printf '%s' "$d" | tr 'A-Z' 'a-z')"
              # Безопасная подмена 0.0.0.0
              if [[ "$ip" == "0.0.0.0" ]]; then
                ip_addr="192.0.2.1"
              else
                ip_addr="$ip"
              fi
              printf "%s %s\n" "$ip_addr" "$d_lc" >> "$tmp_pairs"
            done
          done

          # Убираем дубликаты и сортируем для детерминированности
          cnt=0
          while read -r ip_addr d; do
            echo "/ip dns static add name=$d address=$ip_addr ttl=${DNS_TTL} address-list=autohost" >> "$out"
            cnt=$((cnt+1))
          done < <(sort -u "$tmp_pairs")

          echo "/log info \"[update-hosts] Added $cnt entries\"" >> "$out"
          echo "::notice ::Generated count=$cnt"
          echo "count=$cnt" >> "$GITHUB_OUTPUT"

      - name: Create pull request
        if: steps.cmp.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: bot/update-mikrotik-rsc
          title: "Rebuild Mikrotik RSC: ${{ steps.gen.outputs.count }} entries"
          commit-message: "Rebuild Mikrotik RSC: ${{ steps.gen.outputs.count }} entries"
          body: |
            Auto-generated update from AntiZapret.
            Entries: ${{ steps.gen.outputs.count }}
          add-paths: |
            mikrotik/dns-static.rsc
            hosts
          delete-branch: true
          # При включенном Allow auto-merge GitHub сольет PR автоматически после выполнения требований защиты ветки
          auto-merge-method: squash
          # Необязательно: можно добавить метку, если у вас есть автоматизация на метки
          # labels: auto-merge
