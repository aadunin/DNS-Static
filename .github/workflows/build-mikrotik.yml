name: Build Mikrotik RSC

on:
  schedule:
    - cron: "0 0 * * *" # каждый день в 00:00 UTC
  workflow_dispatch:
  push:
    branches: [ main ]

concurrency:
  group: mikrotik-rsc
  cancel-in-progress: true

env:
  DNS_TTL: 1d
  HOSTS_URL: https://raw.githubusercontent.com/pumPCin/AntiZapret/main/hosts

jobs:
  build:
    name: Build Mikrotik RSC
    runs-on: ubuntu-latest
    permissions:
      contents: write
    # Не запускаем job на собственный автопуш, помеченный [skip ci]
    if: github.event_name != 'push' || !contains(github.event.head_commit.message, '[skip ci]')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          ref: main

      - name: Fetch latest hosts
        id: fetch
        shell: bash
        run: |
          set -euo pipefail
          curl -fSLS --retry 3 --retry-delay 2 -m 30 -o hosts "$HOSTS_URL"
          if ! test -s hosts; then
            echo "::error ::Empty hosts file from source"
            exit 1
          fi
          if head -n 5 hosts | grep -qiE '</?html'; then
            echo "::error ::Source returned HTML instead of hosts"
            exit 1
          fi
          if ! grep -Eq '^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+' hosts; then
            echo "::error ::Hosts file format invalid"
            exit 1
          fi

      - name: Load previous hosts snapshot (local main)
        id: prev
        shell: bash
        run: |
          # Если файла еще не было в репозитории, создаём пустой
          [ -f hosts.prev ] && rm -f hosts.prev
          if [ -f "./hosts" ]; then
            # Сохраняем текущий файл из рабочего дерева как "предыдущий снимок"
            git show HEAD:hosts > hosts.prev 2>/dev/null || touch hosts.prev
          else
            touch hosts.prev
          fi

      - name: Compare hosts
        id: cmp
        shell: bash
        run: |
          if cmp -s hosts hosts.prev; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
            echo "::notice ::No changes in AntiZapret hosts, skipping update"
          else
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Generate dns-static.rsc
        if: steps.cmp.outputs.changed == 'true'
        id: gen
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p mikrotik
          out="mikrotik/dns-static.rsc"
          echo '/ip dns static remove [find address-list="autohost"]' > "$out"

          tmp_pairs="$(mktemp)"
          # Собираем пары (IP, домен), фильтры, lower-case доменов, подмена 0.0.0.0
          grep -Ev '^(#|$)' hosts | while read -r ip rest; do
            # Простейшая фильтрация IP-формата (для шумоподавления)
            if ! [[ "$ip" =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}$ ]]; then
              continue
            fi
            for d in $rest; do
              if [[ "$ip" == "127.0.0.1" && ( "$d" == "local" || "$d" == "localhost" || "$d" == "localhost.localdomain" ) ]]; then
                continue
              fi
              if [[ "$ip" == "255.255.255.255" && "$d" == "broadcasthost" ]]; then
                continue
              fi
              d_lc="$(printf '%s' "$d" | tr 'A-Z' 'a-z')"
              if [[ "$ip" == "0.0.0.0" ]]; then
                ip_addr="192.0.2.1"
              else
                ip_addr="$ip"
              fi
              printf "%s %s\n" "$ip_addr" "$d_lc" >> "$tmp_pairs"
            done
          done

          cnt=0
          # Детерминированный порядок: сортировка и уникализация
          while read -r ip_addr d; do
            echo "/ip dns static add name=$d address=$ip_addr ttl=${DNS_TTL} address-list=autohost" >> "$out"
            cnt=$((cnt+1))
          done < <(sort -u "$tmp_pairs")

          echo "/log info \"[update-hosts] Added $cnt entries\"" >> "$out"
          echo "count=$cnt" >> "$GITHUB_OUTPUT"
          echo "::notice ::Generated count=$cnt"
          rm -f "$tmp_pairs" hosts.prev

      - name: Commit and push changes
        if: steps.cmp.outputs.changed == 'true'
        shell: bash
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Обновляем рабочее дерево: новый hosts + сгенерированный rsc
          git add hosts mikrotik/dns-static.rsc

          # Коммит только если есть изменения
          if ! git diff --quiet --cached; then
            msg="Rebuild Mikrotik RSC: ${{ steps.gen.outputs.count }} entries [skip ci]"
            git commit -m "$msg"
            git push origin HEAD:main
            echo "::notice ::Pushed ${{ steps.gen.outputs.count }} entries to main"
          else
            echo "::notice ::No staged changes to commit"
          fi
